buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

repositories {
    jcenter()
    google()
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        consumerProguardFiles 'proguard-rules.pro'
    }
}

dependencies {
    implementation 'com.kongzue.baseokhttp_v3:baseokhttp_v3:3.1.6+'

    implementation ('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }

}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

project.afterEvaluate {
    publishing {
        publications {
            MyPublication(MavenPublication) {
                version "1.0.0"
                groupId 'com.kongzue.webdav_util'
                artifactId 'webdav_util'

                artifact bundleReleaseAar
                artifact sourcesJar

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    // Get Bintray credential from environment variable
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    dryRun = false
    override = false
    publish = true
    pkg {
        repo = 'maven'
        name = 'webdav_util'
        userOrg = user
        licenses = ['Apache-2.0']
        desc = 'A WebDAV library for Android'
        vcsUrl = 'https://github.com/kongzue/sardine-android.git'

        version {
            name = "1.0.0" //Bintray logical version name
            vcsTag = "1.0.0"
        }
    }
    publications = ['MyPublication']
}
